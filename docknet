#! /usr/bin/env bash

DN_NAME=$(basename ${PWD})
CONTAINER_NAME="docknet-${DN_NAME}"

# Start the container if it's stopped, or run it if it doesn't exist
function start {
    running=$(docker inspect -f {{.State.Running}} ${CONTAINER_NAME})
    if [ $? -ne 0 ] ; then
        echo "Running rendlelabs/docknet as ${CONTAINER_NAME}"
        # Create cache directories if they don't exist
        mkdir -p ~/.local/share/NuGet
        mkdir -p ~/.nuget
        # Mount PWD to container as basename of path,
        # and mount host's NuGet directories
        docker run -d -v="${PWD}:/${DN_NAME}" \
            -v "${HOME}/.local/share/NuGet:/root/.local/share/NuGet" \
            -v "${HOME}/.nuget:/root/.nuget" \
            -w="/${DN_NAME}"  --name="${CONTAINER_NAME}" rendlelabs/docknet
    elif [ $running == "false" ] ; then
        docker start ${CONTAINER_NAME}
    else
        echo "Already running."
    fi
}

function usage {
    cat <<!
Usage: docknet COMMAND

Commands:

  start: Start the container if it is stopped, or run it if it doesn't exist
  stop:  Stop the container
  kill:  Kill the container
}

if [ -z $1 || $1 == "--help" ] ; then
    usage
elif [ $1 == "start" ] ; then
    start
elif [ $1 == "stop" ] ; then
    docker stop ${CONTAINER_NAME}
elif [ $1 == "kill" ] ; then
    docker kill ${CONTAINER_NAME}
elif [ $1 == "rm" ] ; then
    docker rm ${CONTAINER_NAME}
elif [ $1 == "bash" ] ; then
    docker exec -ti ${CONTAINER_NAME} /usr/bin/env bash
else
    docker exec ${CONTAINER_NAME} dotnetproxy $@
fi
